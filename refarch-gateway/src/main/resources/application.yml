spring:
  application.name: '@project.artifactId@'
  banner.location: banner.txt
  main:
    web-application-type: reactive
  jackson:
    serialization:
      indent-output: on
  session:
    timeout: 1800  # in seconds; Goal: same lifetime as SSO Session, actual: 30 minutes
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SSO_ISSUER_URL}
      client:
        provider:
          keycloak:
            issuer-uri: ${SSO_ISSUER_URL}
        registration:
          keycloak:
            client-id: ${SSO_CLIENT_ID}
            client-secret: ${SSO_CLIENT_SECRET}
            scope: email, profile, openid  # needed for userInfo endpoint
            provider: keycloak
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/public/**]':
            allowedOriginPatterns: ${ALLOWED_ORIGINS_PUBLIC}
          '[/clients/**]':
            allowedOriginPatterns: ${ALLOWED_ORIGINS_CLIENTS}
            allowedHeaders: "*"
            allowCredentials: true
      default-filters:
        - RemoveResponseHeader=Expires
        - RemoveRequestHeader=cookie
        - RemoveRequestHeader=x-xsrf-token
        - TokenRelay=

server:
  port: 8080
  error:
    include-exception: false
    include-stacktrace: never
    include-message: always
    whitelabel:
      enabled: false
  shutdown: graceful

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, info, prometheus, livenessState, readinessState
      path-mapping:
        prometheus: metrics
  endpoint:
    health:
      enabled: on
      probes:
        enabled: true
    info:
      enabled: on
    prometheus:
      enabled: on
  info:
    env:
      enabled: true

info:
  application:
    name: ${spring.application.name}
    version: '@project.version@'

config:
  map5xxto400: true
