env:
  JAVA_VERSION: 21
  REGISTRY: ghcr.io
  TZ: Europe/Berlin

on:
  workflow_call:
    inputs:
      module:
        description: 'Module to build'
        type: string
        required: true
      snapshot-release:
        description: 'Snapshot release?'
        type: boolean
        default: true
      build-images:
        description: 'Build and push images?'
        type: boolean
        default: false
      release-version:
        description: 'Release version'
        type: string
        required: false
        default: "X.Y.Z"
      next-version:
        description: "Next version to use after release"
        type: string
        required: false
        default: "X.Y.Z-SNAPSHOT"

jobs:
  build-maven:
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/build-maven
        with:
          module: ${{ inputs.module }}
          release: ${{ inputs.snapshot-release == false }}
          release-version: ${{ inputs.release-version }}
          next-version: ${{ inputs.next-version }}
          java-version: "21"
          gpg-private-key: ${{ secrets.gpg_private_key }}
          gpg-passphrase: ${{ secrets.gpg_passphrase }}
          sonatype-username: ${{ secrets.sonatype_username }}
          sonatype-password: ${{ secrets.sonatype_password }}

  build-images:
    if: inputs.build-images == true
    needs: build-maven
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: refarch-gateway
            path: ./refarch-gateway
            module: refarch-gateway
          - name: s3-integration-rest-service
            path: ./refarch-integrations/refarch-s3-integration/refarch-s3-integration-rest/refarch-s3-integration-rest-service
            module: refarch-integrations
    steps:
      - uses: ./.github/actions/build-image
        if: matrix.module == inputs.module
        with:
          registry: ${{ env.REGISTRY }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ matrix.path }}
          image-name: ${{ matrix.name }}
          image-tags: |
            type=raw,value=${{ inputs.release-version }}
            type=raw,value=latest,enable=${{ inputs.snapshot-release == false }}
