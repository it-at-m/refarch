env:
  JAVA_VERSION: 17
  REGISTRY: ghcr.io
  TZ: Europe/Berlin

on:
  workflow_call:
    inputs:
      snapshot-release:
        description: 'Snapshot release?'
        type: boolean
        default: true
      build-images:
        description: 'Build and push images?'
        type: boolean
        default: false
      release-version:
        description: 'Release version'
        type: string
        required: false

jobs:
  build-maven:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: "maven"
      - name: Maven build
        run: mvn --batch-mode clean install
      - name: "Upload target artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: "**/target"
          retention-days: 5

  build-images:
    if: inputs.build-images == true
    needs: build-maven
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download target artifacts
        uses: actions/download-artifact@v4
        with:
          name: target
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # refarch-gateway
      - name: Extract metadata (tags, labels) for gateway image
        id: gateway_meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY }}/${{ github.repository }}/refarch-gateway"
          tags: |
            type=raw,value=${{ inputs.release-version }}
            type=raw,value=latest,enable=${{ inputs.snapshot-release == false }}
      - name: Build and push gateway image
        uses: docker/build-push-action@v4
        with:
          context: ./refarch-gateway
          push: true
          tags: ${{ steps.gateway_meta.outputs.tags }}
          labels: ${{ steps.gateway_meta.outputs.labels }}
