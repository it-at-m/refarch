env:
  JAVA_VERSION: 21
  REGISTRY: ghcr.io
  TZ: Europe/Berlin

on:
  workflow_call:
    inputs:
      snapshot-release:
        description: 'Snapshot release?'
        type: boolean
        default: true
      build-images:
        description: 'Build and push images?'
        type: boolean
        default: false
      release-version:
        description: 'Release version'
        type: string
        required: false
        default: "X.Y.Z"
      next-version:
        description: "Next version to use after release."
        type: string
        required: false
        default: "X.Y.Z-SNAPSHOT"

jobs:
  build-maven:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up JDK
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.2.2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: "maven"
          server-id: "central"
          server-username: CENTRAL_USERNAME
          server-password: CENTRAL_PASSWORD
          gpg-private-key: ${{ secrets.gpg_private_key }}
          gpg-passphrase: SIGN_KEY_PASS
      - name: Maven build
        if: ${{ inputs.snapshot-release != false }}
        run: mvn --batch-mode clean install
      - name: Maven release
        if: ${{ inputs.snapshot-release == false }}
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          mvn release:prepare -B -DreleaseVersion=${{ inputs.release-version }} -DdevelopmentVersion=${{ inputs.next-version }} -DpushChanges=false -DremoteTagging=false
          mvn release:perform -DlocalCheckout=true
        env:
          SIGN_KEY_PASS: ${{ secrets.gpg_passphrase }}
          CENTRAL_USERNAME: ${{ secrets.sonatype_username }}
          CENTRAL_PASSWORD: ${{ secrets.sonatype_password }}
      - name: "Upload target artifacts"
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: target
          path: "**/target"
          retention-days: 5
      - name: Push changes to new branch
        if: ${{ inputs.snapshot-release == false }}
        run: |
          git checkout -b ${{ github.ref_name }}-version-bump
          git push --force origin ${{ github.ref_name }}-version-bump
      - name: Create pull request
        if: ${{ inputs.snapshot-release == false }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { repo, owner } = context.repo;
            const pullResult = await github.rest.pulls.create({
              title: 'chore: bump release version ${{ github.ref_name }}',
              owner,
              repo,
              head: '${{ github.ref_name }}-version-bump',
              base: '${{ github.ref_name }}',
              body: [
                'This PR is auto-generated'
              ].join('\n')
            });
            await github.rest.issues.addAssignees({
              owner,
              repo,
              issue_number: pullResult.data.number,
              assignees: ['${{ github.actor }}'],
            });
            console.log(`Pull Request created: ${pullResult.data.html_url}`);

  build-images:
    if: inputs.build-images == true
    needs: build-maven
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: refarch-gateway
            path: ./refarch-gateway
          - name: s3-integration-rest-service
            path: ./refarch-integrations/refarch-s3-integration/refarch-s3-integration-rest/refarch-s3-integration-rest-service
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Download target artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: target
      - name: Login to Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for image
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: "${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}"
          tags: |
            type=raw,value=${{ inputs.release-version }}
            type=raw,value=latest,enable=${{ inputs.snapshot-release == false }}
      - name: Build and push image
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
        with:
          context: ${{ matrix.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
